@page "/"
@using Pricely.Libraries.Services.Models.PriceRunner
@using Pricely.Libraries.Services.Services
@using PricelyWeb.Client.Configuration

@inject HttpClient httpClient
@inject IGetPriceRunnerResults _getPriceRunnerResults
@inject PricelySettings _settings

<PageTitle>Hjem</PageTitle>

<MudText Typo="Typo.h4" GutterBottom="true">Søg med Pricely (Beta, designet skal forbedres.)</MudText>
<MudText Class="mb-8">Pricely 1.0 (beta1). Pricely Søgning henter data ned fra alle understøttede butikker.</MudText>
<MudTextField @bind-Value="@SearchText"
              OnAdornmentClick="() => GetPrices(SearchText)"
              Label="Søg på over 3 millioner produkter..."
              Variant="Variant.Outlined"
              Adornment="Adornment.End"
              AdornmentIcon="@Icons.Material.Filled.Search"
              AdornmentColor="Color.Secondary"
              Style="border-radius: 12px;"
              Class="rounded-full" />

<br />
<br />
<br />
<br />

<MudGrid Spacing="0" Justify="Justify.SpaceAround">
    @foreach (var item in Results.ProductResults)
    {
        <PricelyWeb.Client.Pages.ProductComponents.ProductListingCard Id="@item.Id" Title="@item.Name" Price="@item.LowestPrice" ImageLink="@item.ImageUrl" />
    }
</MudGrid>

@code {
    public PriceRunnerSearchResults Results { get; set; } = new();
    public string SearchText { get; set; }

    public async Task GetPrices(string search)
    {
        // Results = await _getPriceRunnerResults.GetProductsFromSearch(search);

        Results  = await httpClient.GetFromJsonAsync<PriceRunnerSearchResults>($"{_settings.BackendUrl}/v1/pr/search/{search}");
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {

        // Results =  await _getPriceRunnerResults.GetProductsFromSearch("");
    }

}