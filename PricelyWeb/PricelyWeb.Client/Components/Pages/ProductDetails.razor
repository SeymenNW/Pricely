@page "/pr/details/{productId}"
@using Pricely.Libraries.Services.Models.PriceRunner
@using Pricely.Libraries.Services.Services
@using PricelyWeb.Client.Configuration
@using PricelyWeb.Client.Components.PageComponents.ProductDetails
@rendermode InteractiveWebAssembly
@inject IGetPriceRunnerResults _priceRunnerResults
@inject HttpClient _httpClient
@inject PricelySettings _settings

@if (Details != null)
{
    <!-- Er stadig under udviklingbesked.. -->
    <div class="absolute left-2 top-2 rounded-full bg-green-200 px-2 py-1 text-sm font-medium text-green-700">
        Denne side er stadig under udvikling.. (Ratings osv fungerer ikke indtil videre.)
    </div>

    <ProductBanner PriceRunnerUrl="@Details.PriceRunnerUrl" Description="@Details.Description" ImageUrls="@Details.ImageUrls" ProductName="@Details.Name" MaxPrice="@Details.MaxPrice" MinPrice="@Details.MinPrice"/>

    @foreach (var merchant in Details.Merchants)
    {
        <MudPaper Class="pa-4 mt-3">
            <MudGrid>
    <MudItem xs="12">
        <MudGrid>
            <MudItem xs="1">
                <MudAvatar Icon="@Icons.Material.Filled.Store" Size="Size.Large" />
            </MudItem>
            <MudItem xs="11">
                <MudText Typo="Typo.h6">@merchant.Name</MudText>
                <MudRating Value="4.8" MaxValue="5" ReadOnly="true" />
                <MudText Color="Color.Primary" >(X)</MudText>
            </MudItem>
        </MudGrid>
    </MudItem>
    <MudItem xs="12">
        <MudText Typo="Typo.subtitle1">
            @merchant.MerchantProductName
        </MudText>
    </MudItem>
    <MudItem xs="12">
        <MudGrid>
            <MudItem xs="6">
                <MudText Typo="Typo.body2">Fri fragt, 1-2 dage</MudText>
            </MudItem>
            <MudItem xs="6" Class="d-flex justify-end">
                <MudText Typo="Typo.h5">4.206 kr.</MudText>
                <MudIconButton Href="@merchant.ProductUrl" Icon="@Icons.Material.Filled.ArrowForward" />
            </MudItem>
        </MudGrid>
    </MudItem>
</MudGrid>



        </MudPaper>
    }



}
else
{
    <MudText>Produktet indlæses.. (Refresh siden hvis der går for lang tid)</MudText>
    <div class="flex h-screen items-center justify-center">
        <MudCard>
            <MudSkeleton SkeletonType="SkeletonType.Rectangle" Height="200px" />
            <MudCardContent>
                <MudSkeleton Width="30%" Height="42px;" />
                <MudSkeleton Width="80%" />
                <MudSkeleton Width="100%" />
            </MudCardContent>
            <MudCardActions>
                <MudSkeleton Width="64px" Height="40px" Class="ml-2" />
                <MudSkeleton Width="105px" Height="40px" Class="ml-3" />
            </MudCardActions>
        </MudCard>
    </div>

}




@code {
    [Parameter]
    public string ProductId { get; set; }



    public PriceRunnerProductDetails Details { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Details = await _priceRunnerResults.GetProductDetailsFromId(ProductId);

    }
}
